// if 문2 - else if

// 문제
// 당신은 연령에 따라 다른 메시지를 출력하는 프로그램을 작성해야한다.
// 이 프로그램은 int age 라는 변수를 사용해야 하며, 연령에 따라 다음의 출력을 해야 한다.

// 7세 이하일 경우: "미취학"
// 8세 이상, 13세 이하일 경우: "초등학생"
// 14세 이상, 16세 이하일 경우: "중학생"
// 17세 이상, 19세 이하일 경우: "고등학생"
// 20세 이상일 경우: "성인"

package cond;

public class If3 {
    public static void main(String[] args) {
        int age = 26;

        if (age <= 7) {
            System.out.println("미취학");
        }
        if (age >= 8 && age <= 13) {
            System.out.println("초등학생");
        }
        if (age >= 14 && age <= 16) {
            System.out.println("중학생");
        }
        if (age >= 17 && age <= 19) {
            System.out.println("고등학생");
        }
        if (age >= 20) {
            System.out.println("성인");
        }

    }
}

// 이 코드는 다음과 같은 단점이 있다.
// - 불필요한 검사: 이미 조건을 만족해도 불필요한 다음 조건을 계속 검사한다. 예를 들어서 나이가 5살이라면 미취학이 이미 출력이 된다.
// 그런데 나머지 if 문을 통한 조건 검사도 모두 실행해야 한다.
// - 코드 효율성: 예를 들어서 나이가 8살인 초등학생이라면 미취학을 체크하는 조건인 age >= 7 을 통해 나이가 이미 8살이 넘었다는 사실을 알 수 있다.
// 그런데 바로 다음에 있는 초등학생을 체크하는 조건에서 age >= 8 && age <= 13 이라는 2가지 조건을 모두 수행한다.
// 여기서 age >= 8 이라는 조건은 이미 앞의 age <= 7 이라는 조건과 관련이 있다. 결과적으로 조건을 중복 체크한 것이다.


// else-if
// else if 문은 앞선 if문 조건이 거짓일 때 다음 조건을 검사한다. 만약 if 문이 참이라면 else if 를 실행하지 않는다.
// 쉽게 이야기해서 이렇게 전체 if 문을 하나로 묶는다고 보면 된다. 이렇게 하면 특정 조건이 만족하면 해당 코드를 실행하고
// if문 전체를 빠져나온다. 특정 조건을 만족하지 않으면 다음 조건을 검사한다.
// 여기서 핵심은 순서대로 맞는 조건을 찾아보고, 맞는 조건이 있으며 딱 1개만 실행이 되는 것이다.
// 참고로 else 는 생략할 수 있다.
