// 변수 타입2
// 숫자 타입

package javaStart.variable;

public class Var8 {
    public static void main(String[] args) {
        // 정수
        byte b = 127; // -128 ~ 127 (1byte, 2^8)
        short s = 32767; // -32,768 ~ 32,767 (2byte, 2^16)
        int i = 2147483647; // -2,147,483,648 ~ 2,147,483,647 (약 20억) (4byte, 2^32) *

        // -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807
        long l = 9223372036854775807L; // 소문자 l도 가능하지만 웬만해서는 대문자 L을 권장한다. (8byte, 2^64)

        // 실수
        float f = 10.0f; // (4byte, 2^32) 잘 권장하지 않는 타입이다. 표현 범위가 작아 소수점 계산이 잘 안된다.
        double d = 10.0; // float 보다 범위가 크다. (8byte, 2^64) *
    }
}

// 메모리를 작게 사용하면 작은 숫자를 표현할 수 있고, 메모리를 많이 사용하면 큰 숫자를 표현할 수 있다.
// 변수를 선언하면 표현 번위에 따라 메모리 공간을 차치한다. 그래서 필요에 맞도록 다양한 타입을 제공한다.

// 리터럴 타입 지정
// - 정수 리터럴은 int 를 기본으로 사용한다. int 범위까지 표현할 수 있다. 숫자가 int 범위인 약 20억을 넘어가면 L을 붙여서 정수 리터럴을 long 으로 변경해야한다.
// (대문자 L, 소문자 l 모두 가능하다. 그런데 소문자 l은 숫자 1과 착각할 수 있어서 권장하지 않는다.)
// - 실수 리터럴은 기본이 double 형을 사용한다. float 형을 사용하려면 f를 붙여서 float 형으로 지정해야 한다.


// 변수 타입 정리
// 이렇게 많은 변수들을 실제로 다 외우고 사용해야할까?

// 다음 타입은 실무에서 거의 사용하지 않는다.
// - byte: 표현 길이가 너무 작다. 또 자바는 기본으로 4byte(int)를 효율적으로 계산하도록 설계되어있다. int 를 사용하자.
// - short: 표현 길이가 너무 작다. 또 자바는 기본으로 4byte(int)를 효율적으로 계산하도록 설계되어있다. int 를 사용하자.
// - float: 표현 길이와 정밀도가 낮다. 실수형은 double 을 사용하자
// - char: 문자 하나를 표현하는 일은 거의 없다. 문자 하나를 표현할 때도 문자열을 사용할 수 있다. 예를 들어 String a = "a"; 와 같이 사용하면 된다.

// 참고
// 메모리 용량은 매우 저렴하다. 따라서 메모리 용량을 약간 절약하기 보다는 개발 속도나 효율에 초점을 맞추는 것이 더 효과적이다.

// 지주 사용하는 타입
// 실무에서 자주 사용하는 타입은 다음과 같다.
// - 정수 - int, long: 자바는 정수에 기본으로 int 를 사용한다. 만약 20억이 넘을 것 같으면 long 을 쓰면 된다. (파일을 다룰 때는 byte 를 사용한다.)
// - 실수 - double: 실수는 고민하지 말고 double 을 쓰면 된다.
// - 불린형 - boolean: true, false 참 거짓을 표현한다. 이후 조건문에서 자주 사용된다.
// - 문자열 - String: 문자열을 다룰 때는 문자 하나든 문자열이든 모두 String 을 사용하는 것이 편리하다.
